using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using System.Data;
using System.Data.SqlClient;
using System.Configuration;
namespace UserVerify
{
    public class VerifyUser
    {
        public string UserID;
        public string PermissionLevel;

        public bool getUserVerify(string TableName, string ConnectionString,string UserIDColName, string ReturnColName, string PermissionConditionString)
        {
            string cnstr1 = ConfigurationManager.ConnectionStrings[ConnectionString].ConnectionString;
            using (SqlConnection cn1 = new SqlConnection())
            {
                cn1.ConnectionString = cnstr1;
                string SqlCommandLine = "select " + ReturnColName + " from " + TableName + " where " + PermissionConditionString;
                SqlCommand cmd11 = new SqlCommand(SqlCommandLine, cn1);
                cmd11.Parameters.Clear();
               // cmd11.Parameters.Add("@UserID", SqlDbType.NVarChar).Value = UserID;
                if (PermissionConditionString.Length == 0)
                    PermissionConditionString = UserIDColName + "=" + UserID;
                else
                    PermissionConditionString = PermissionConditionString + " and " + UserIDColName + "=" + UserID;

                SqlDataAdapter da1 = new SqlDataAdapter(cmd11);
                DataTable dt1 = new DataTable();
                da1.Fill(dt1);
                if (dt1.Rows.Count > 0)
                {

                    for (int i = 0; i < dt1.Rows.Count; i++)
                    {
                        if (dt1.Columns[ReturnColName].DataType == System.Type.GetType("System.Int32"))
                            PermissionLevel = dt1.Rows[i].Field<int>(ReturnColName).ToString();
                        if (dt1.Columns[ReturnColName].DataType == System.Type.GetType("System.String"))
                            PermissionLevel = dt1.Rows[i].Field<string>(ReturnColName).ToString();
                    }

                    return true;
                }
                else
                {
                    return false;
                }
            }
        }
    
    }
}
